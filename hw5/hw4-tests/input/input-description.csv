input/input1.txt,output/input1.out,student-output/input1.out,1,End
input/input2.txt,output/input2.out,student-output/input2.out,1,Return
input/input3.txt,output/input3.out,student-output/input3.out,1,Gosub
input/input4.txt,output/input4.out,student-output/input4.out,1,Goto
input/input5.txt,output/input5.out,student-output/input5.out,1,Empty
input/print1.txt,output/print1.out,student-output/print1.out,1,Print single digit
input/print2.txt,output/print2.out,student-output/print2.out,1,Print multiple digit
input/print3.txt,output/print3.out,student-output/print3.out,1,Print variable
input/print4.txt,output/print4.out,student-output/print4.out,1,Print array variable
input/print5.txt,output/print5.out,student-output/print5.out,1,Print array nested
input/print6.txt,output/print6.out,student-output/print6.out,1,print add
input/print7.txt,output/print7.out,student-output/print7.out,1,print substract
input/print8.txt,output/print8.out,student-output/print8.out,1,print multiply
input/print9.txt,output/print9.out,student-output/print9.out,1,print divide
input/print10.txt,output/print10.out,student-output/print10.out,1,print nested add
input/print11.txt,output/print11.out,student-output/print11.out,1,print nested combine
input/print12.txt,output/print12.out,student-output/print12.out,1,print array variable with expression
input/print13.txt,output/print13.out,student-output/print13.out,1,print array variable expression nested
input/print14.txt,output/print14.out,student-output/print14.out,2,print expression with array varaible nested
input/print15.txt,output/print15.out,student-output/print15.out,1,negative
input/let1.txt,output/let1.out,student-output/let1.out,1,"single var, single digit"
input/let2.txt,output/let2.out,student-output/let2.out,1,"single var, single var "
input/let3.txt,output/let3.out,student-output/let3.out,1,"single var, array var"
input/let4.txt,output/let4.out,student-output/let4.out,1,"single var, expression"
input/let5.txt,output/let5.out,student-output/let5.out,1,"single var, expression with array"
input/let6.txt,output/let6.out,student-output/let6.out,1,"single var, array var nested"
input/let7.txt,output/let7.out,student-output/let7.out,1,"single var, expression with array with expression"
input/let8.txt,output/let8.out,student-output/let8.out,1,"single var, expression nested"
input/let9.txt,output/let9.out,student-output/let9.out,1,"single var, array var with expression nested"
input/let10.txt,output/let10.out,student-output/let10.out,1,"single var, complicated expression"
input/let11.txt,output/let11.out,student-output/let11.out,1,"array var, single digit"
input/let12.txt,output/let12.out,student-output/let12.out,1,"array var with exp, var"
input/let13.txt,output/let13.out,student-output/let13.out,1,"array var nested, single digit"
input/let14.txt,output/let14.out,student-output/let14.out,1,"array var with expression nested, single digit"
input/let15.txt,output/let15.out,student-output/let15.out,1,"array var with expression with array var, single digit"
input/let16.txt,output/let16.out,student-output/let16.out,1,"array var complicated, single digit"
input/let17.txt,output/let17.out,student-output/let17.out,1,"array var with exp, exp"
input/let18.txt,output/let18.out,student-output/let18.out,1,"array var nested, array var nested"
input/let19.txt,output/let19.out,student-output/let19.out,1,"array var with expression, expression "
input/let20.txt,output/let20.out,student-output/let20.out,1,"array var with exp reverse, exp reverse"
input/let21.txt,output/let21.out,student-output/let21.out,1,"array var nested exp, nested exp"
input/let22.txt,output/let22.out,student-output/let22.out,1,"array var nested exp with array var, nested exp with array var"
input/let23.txt,output/let23.out,student-output/let23.out,1,complicated case
input/let24.txt,output/let24.out,student-output/let24.out,2,complicated case
input/let25.txt,output/let25.out,student-output/let25.out,1,edge case
input/let26.txt,output/let26.out,student-output/let26.out,1,negative case
input/if1.txt,output/if1.out,student-output/if1.out,1,>
input/if2.txt,output/if2.out,student-output/if2.out,1,=
input/if3.txt,output/if3.out,student-output/if3.out,1,<
input/if4.txt,output/if4.out,student-output/if4.out,1,< array var
input/if5.txt,output/if5.out,student-output/if5.out,1,equal exp
input/if6.txt,output/if6.out,student-output/if6.out,1,< exp
input/if7.txt,output/if7.out,student-output/if7.out,1,< nested var
input/if8.txt,output/if8.out,student-output/if8.out,1,> nested array var
input/if9.txt,output/if9.out,student-output/if9.out,1,equal exp with array
input/if10.txt,output/if10.out,student-output/if10.out,1,< array var with exp
input/if11.txt,output/if11.out,student-output/if11.out,1,equal combined
input/if12.txt,output/if12.out,student-output/if12.out,1,equal array var with nested 
input/if13.txt,output/if13.out,student-output/if13.out,1,> array var combined
input/if14.txt,output/if14.out,student-output/if14.out,2,complicated case
input/if15.txt,output/if15.out,student-output/if15.out,1,edge case
input/if16.txt,output/if16.out,student-output/if16.out,1,negative case
input/program1.txt,output/program1.out,student-output/program1.out,5,print program 
input/program2.txt,output/program2.out,student-output/program2.out,5,sort program
